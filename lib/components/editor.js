// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require, exports, module) {
    var Component, Editor, Gutter, Layers, Time, utils;
    Component = require('./index');
    Gutter = require('./gutter');
    Layers = require('./layers');
    Time = require('./time');
    utils = {
      el: require('../utils/el')
    };
    require('../../jquery');
    Editor = (function(_super) {

      __extends(Editor, _super);

      function Editor() {
        var self;
        self = this;
        Editor.__super__.constructor.apply(this, arguments);
        (function() {
          this.gutter = new Gutter;
          this.layers = new Layers;
          return this.time = new Time;
        }).call(this.comps);
      }

      Editor.prototype._render = function(el, comps) {
        var resize;
        el.html('');
        resize = function(el) {
          return comps.layers.css('left', utils.el.measure(el).width + 'px');
        };
        this.comps.gutter.on('rendered', resize);
        this.once('render', function() {
          return this.comps.gutter.off('rendered', resize);
        });
        el.append(comps.gutter);
        el.append(comps.layers);
        el.append(new Date().toString());
        return resize(comps.gutter);
      };

      return Editor;

    })(Component);
    return module.exports = Editor;
  });

}).call(this);
